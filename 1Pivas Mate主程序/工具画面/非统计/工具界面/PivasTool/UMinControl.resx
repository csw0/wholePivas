<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>